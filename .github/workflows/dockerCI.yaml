name: Docker CI

on:
  push:
    branches:
      - main

    paths:
      - 'src/**'

    paths-ignore:
      - 'docs/**'
      - '**.md'

    tags:
      - v*

on:
  pull_request:
    types: [ opened, reopened, synchronize, closed ]
    branches:
      - main

    paths-ignore:
    - 'docs/**'
    - '**.md'

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      ACR_IMAGE_URL    : ${{ secrets.ACR_REG }}.azurecr.io/${{ secrets.ACR_REPO }}
      # These are used in if: conditions
      ACR_LOGGED_IN    : false
      DKR_IMG_IS_BUILT : false

    steps:
    - uses: actions/checkout@v1

    - name: Login to Azure registry
      # do not copy the actual secrets
      # You must add the following secrets to github repo
      #    ACR_USER  - Azure ServicePrincipal ID
      #    ACR_PAT   - the access token for the ServicePrincipal
      #    ACR_REPO  - the azure ecr repository name in the form: organization/repository
      #    ACR_REG   - the azure ecr registry name. It will be apended to form azure CR url: $DOCKER_REG.azurecr.io
      # Overall azure reg/repo address will be in the form : $ACR_REG.azurecr.io/$DOCKER_REPO
      run: |
        # Login to Azure registry
        echo Logging into # TODO: Remove this
        echo "${{ secrets.SERVICE_PRINCIPAL_SECRET }}" | docker login "${ACR_IMAGE_URL}" -u ${{ secrets.SERVICE_PRINCIPAL_ID }} --password-stdin

        # If docker login fails, set env variable
        [[ $? == 0 ]] && echo "::set-env name=ACR_LOGGED_IN::true"

    - name: Build Container
      if: ${{ env.ACR_LOGGED_IN == 'true' }}
      run: |
        # Build Image
        docker build -t image .
        # Set variable is successful
        [[ $? == 0 ]] && echo "::set-env name=DKR_IMG_IS_BUILT::true"

    - name: Docker Push
      if: ${{ env.DKR_IMG_IS_BUILT == 'true' }}
      run: |
        # Tag and push the docker image
        IMAGE_ID="${ACR_IMAGE_URL}"
        docker tag image $IMAGE_ID:stable
        docker push $IMAGE_ID
